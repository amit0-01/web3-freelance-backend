// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  FREELANCER
  ADMIN
}

model User {
  id            Int     @id @default(autoincrement())
  name          String
  email         String  @unique
  password      String
  walletAddress String? @unique
  role          Role    @default(FREELANCER)

  employerJobs   Job[] @relation(name: "EmployerJobs") // ✅ Add this relation
  freelancerJobs Job[] @relation(name: "FreelancerJobs") // ✅ Add this relation
   applications Application[]
}

model Job {
  id            Int       @id @default(autoincrement())
  title         String
  description   String    // <-- add this
  payment       Decimal   @default(0.0)
  deadline      DateTime?
  duration      String    // <-- add this
  category      String[]  // <-- add this
  deliverables  String[]  // <-- add this

  transactionHash String? // <-- optional, store blockchain tx hash

  employerId    Int
  employer      User @relation(name: "EmployerJobs", fields: [employerId], references: [id])

  freelancerId  Int?
  freelancer    User? @relation(name: "FreelancerJobs", fields: [freelancerId], references: [id])

  isPaid        Boolean @default(false)
  applications  Application[]
}


model Application {
  id               Int      @id @default(autoincrement())
  job             Job      @relation(fields: [jobId], references: [id])
  jobId           Int
  user            User     @relation(fields: [userId], references: [id])
  userId          Int
  coverLetter     String
  proposedRate    Float
  estimatedDuration String
  portfolioLink   String?
  createdAt       DateTime @default(now())
  status            ApplicationStatus @default(PENDING)
}

enum ApplicationStatus {
  PENDING
  ACCEPTED
  REJECTED
}
